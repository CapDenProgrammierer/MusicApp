// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicApp.Models;

#nullable disable

namespace MusicApp.Migrations
{
    [DbContext(typeof(SpotilinfContext))]
    partial class SpotilinfContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlbumCanciones", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("CancionId")
                        .HasColumnType("int");

                    b.HasKey("AlbumId", "CancionId");

                    b.HasIndex("CancionId");

                    b.ToTable("AlbumCanciones");
                });

            modelBuilder.Entity("MusicApp.Models.Albume", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AlbumID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<int?>("Anho")
                        .HasColumnType("int");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("int")
                        .HasColumnName("ArtistaID");

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AlbumId")
                        .HasName("PK__Albumes__97B4BE17FE8E898E");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Albumes");
                });

            modelBuilder.Entity("MusicApp.Models.Artista", b =>
                {
                    b.Property<int>("ArtistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistaId"));

                    b.Property<string>("Alias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("FechaDefuncion")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nacionalidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Obras")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistaId")
                        .HasName("PK__Artistas__1DC48275DECA7431");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("MusicApp.Models.Cancione", b =>
                {
                    b.Property<int>("CancionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CancionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CancionId"));

                    b.Property<int?>("Anho")
                        .HasColumnType("int");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("int")
                        .HasColumnName("ArtistaID");

                    b.Property<byte[]>("Cancion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CancionId")
                        .HasName("PK__Cancione__EDA6B1AF42168C04");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("MusicApp.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlaylistID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistId"));

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlaylistId")
                        .HasName("PK__Playlist__B301678030D406DE");

                    b.ToTable("Playlist", (string)null);
                });

            modelBuilder.Entity("MusicApp.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE798F2DB7ABD");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlaylistCanciones", b =>
                {
                    b.Property<int>("CancionId")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.HasKey("CancionId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistCanciones");
                });

            modelBuilder.Entity("AlbumCanciones", b =>
                {
                    b.HasOne("MusicApp.Models.Albume", null)
                        .WithMany()
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApp.Models.Cancione", null)
                        .WithMany()
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicApp.Models.Albume", b =>
                {
                    b.HasOne("MusicApp.Models.Artista", "Artista")
                        .WithMany("Albumes")
                        .HasForeignKey("ArtistaId")
                        .IsRequired()
                        .HasConstraintName("FK_Albumes_Artistas");

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("MusicApp.Models.Cancione", b =>
                {
                    b.HasOne("MusicApp.Models.Artista", "Artista")
                        .WithMany("Canciones")
                        .HasForeignKey("ArtistaId")
                        .IsRequired()
                        .HasConstraintName("FK_Canciones_Artistas");

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("PlaylistCanciones", b =>
                {
                    b.HasOne("MusicApp.Models.Cancione", null)
                        .WithMany()
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApp.Models.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicApp.Models.Artista", b =>
                {
                    b.Navigation("Albumes");

                    b.Navigation("Canciones");
                });
#pragma warning restore 612, 618
        }
    }
}
